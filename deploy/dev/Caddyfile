# run this using a dockedr container:
# docker run --rm -it -p 8002:8002 -v /Users/bcward/projects/sarp-connectivity/deploy/dev/Caddyfile:/etc/caddy/Caddyfile -v /Users/bcward/projects/sarp-connectivity/ui/public:/var/www caddy


:8002 {
  log {
    level ERROR
  }

  # common headers
  header X-Content-Type-Options nosniff
  header Referrer-Policy "strict-origin-when-cross-origin"

  # Set CORS: allow all origins for testing (this is set inside FastAPI)
  # header Access-Control-Allow-Origin *
  # header Access-Control-Request-Method *
  # header Access-Control-Request-Headers *

  route /services* {
      header Cache-Control "public, max-age=3600, must-revalidate"
      reverse_proxy host.docker.internal:8001
  }


  route /api/v1* {
    @encode_paths {
      path */query/* */rank/* */public/* */docs/* */details/*
    }

    encode @encode_paths zstd gzip {
      # enable gzip of octet-stream (disabled by default)
      match {
          header Content-Type text/*
          header Content-Type application/json
          header Content-Type application/octet-stream
      }
    }

    reverse_proxy host.docker.internal:5000
  }

  route /* {
    # redirect teams page
    redir /teams /regions/southeast/teams 301

    # most files can be cached indefinitely, they are rebuilt with new names each time
    @cached_files {
      path *.jpg *.jpeg *.png *.gif *.webp *.svg *.css *.js */static/*
      not path /favicon*
    }
    header @cached_files Cache-Control "public, max-age=31536000, immutable"

    # make sure favicons are not cached too long
    @short_cached_files {
      path /favicon*
    }
    header @short_cached_files Cache-Control "public, max-age=3600"

    # page-data, html, and site root must be fetched each time
    @no_cache {
      path *.html *.webmanifest */page-data/* / /priority /summary /network_methods /metrics/* /regions/* /report/*
    }
    header @no_cache Cache-Control "public, max-age:0, must-revalidate"

    # Capture client only routes and route through correct page to force loading on client side
    rewrite /report/* report/index.html

    encode zstd gzip
    root * /var/www
    file_server
  }

  # Redirect all errors to 404.html
  handle_errors {
      @404 {
          expression {http.error.status_code} == 404
      }
      rewrite @404 /404.html
      file_server
  }
}